name: Docker

on:
  workflow_call:
    inputs:
      ref:
        type: string
        required: false
      repository:
        type: string
        required: true
      local-path:
        type: string
        required: true
      version:
        type: string
        required: true
      push:
        type: boolean
        default: false
      is-release:
        type: boolean
        default: false

env:
  AWS_OIDC_ROLE: ${{ inputs.push && vars.TF_OIDC_ROLE || vars.TF_OIDC_READONLY_ROLE }}
  AWS_REGION: eu-west-1
  REGISTRY: 245185850403.dkr.ecr.eu-west-1.amazonaws.com
  REGISTRY_MIRROR: ghcr.io

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || null }}
          sparse-checkout: ${{ inputs.local-path }}

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ inputs.local-path }}/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract mutable Docker metadata
        id: mutable-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ inputs.repository }}
            ${{ env.REGISTRY_MIRROR }}/dvsa/dvsa-docker-images/${{ inputs.repository }}
          tags: |
            type=raw,value=latest
            type=semver,enable=${{ inputs.is-release }},pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,enable=${{ inputs.is-release }},pattern={{major}},value=${{ inputs.version }}

      - name: Extract all Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ inputs.repository }}
            ${{ env.REGISTRY_MIRROR }}/dvsa/dvsa-docker-images/${{ inputs.repository }}
          tags: |
            type=raw,value=latest
            type=semver,enable=${{ inputs.is-release }},pattern={{major}}.{{minor}},value=${{ inputs.version }}
            type=semver,enable=${{ inputs.is-release }},pattern={{major}},value=${{ inputs.version }}
            type=semver,enable=${{ inputs.is-release }},pattern={{version}},value=${{ inputs.version }}

      - name: Configure AWS credentials
        if: ${{ inputs.push }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}

      - name: Untag mutable tags
        if: ${{ inputs.push && steps.mutable-meta.outputs.tags }}
        env:
          MUTABLE_TAGS: ${{ steps.mutable-meta.outputs.tags }}
          REPOSITORY: ${{ inputs.repository }}
        run: |
          for tag in $MUTABLE_TAGS; do
            aws ecr batch-delete-image --repository-name $REPOSITORY --image-ids imageTag=$tag
          done

      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ inputs.push }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_MIRROR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ${{ inputs.push && 'and push ' || '' }}Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.local-path }}
          platforms: linux/amd64,linux/arm64
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Setup Notation CLI
        if: ${{ inputs.push }}
        uses: notaryproject/notation-action/setup@v1
        with:
          version: "1.1.0"

      - name: Sign artefact
        if: ${{ inputs.push }}
        uses: notaryproject/notation-action/sign@v1
        with:
          plugin_name: com.amazonaws.signer.notation.plugin
          plugin_url: https://d2hvyiie56hcat.cloudfront.net/linux/amd64/plugin/latest/notation-aws-signer-plugin.zip
          plugin_checksum: cccfe8fdcdf853d83fd57ffc80524eddda75ad7ae9d9a257b087007230ec02f9
          key_id: arn:aws:signer:eu-west-1:245185850403:/signing-profiles/base_image_signer20240410115736478500000001
          target_artifact_reference: ${{ env.REGISTRY }}/${{ inputs.repository }}@${{ steps.build-and-push.outputs.digest }}
